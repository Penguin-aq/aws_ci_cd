# This is a basic workflow to help you get started with Actions

name: TEST

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  TEST_FILE_NAME: test_variables                   
  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      - name: script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          echo ${{ secrets.ENVIRONMENTS_SECRETS }}
          mkdir ./temp
          mkdir ./temp/dir
          ls -la 
          echo ${{ github.sha }} >> ./temp/${{ env.TEST_FILE_NAME }}
          echo ${{ github.sha }} >> ./temp/dir/${{ env.TEST_FILE_NAME }}
          echo "----------------"
          tail ./temp/${{ env.TEST_FILE_NAME }}
          echo "----------------"
          ls -la
          
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: homework
          path: ./*
#다중 라인 제외추가
#          path: |
#            ./*
#            !제외
  
  deploy:
    name: deploy
    needs: build  # 없으면 동시실행
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: homework
      - name: script
        run: |
          echo "----------------"
          ls -la 
          echo "----------------"
      
      
      - name: Deliver README.md
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          source: "README.md"
          target: "github/"
          rm: true # target 폴더 전체 삭제
      
      - name: Deliver README.md2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          source: "README.md"
          target: "github2/"
          rm: true
          
      - name: Deliver File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          source: "temp/*"
          target: "github/"
          rm: true

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          script: |
            echo test >> test
            
            
  deploy_production:
    name: deploy_production
    needs: build  # 없으면 동시실행
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: homework
      - name: script
        run: |
          echo ${{ secrets.ENVIRONMENTS_SECRETS }} >> ./test
      - name: Deliver File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_IP }}
          username: ${{ secrets.REMOTE_SSH_ID }}
          key: ${{ secrets.REMOTE_SSH_KEY }}
          port: ${{ secrets.REMOTE_SSH_PORT }}
          source: "test"
          target: "github2/"
          #rm: true
